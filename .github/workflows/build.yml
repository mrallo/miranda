name: Build Miranda

on:
  # Run on pull request events that target the main branch
  pull_request:
    branches:
    - main

  # Run on push events to the main and feature branches
  push:
    branches:
    - main
    - feature/*

  # Enables a manual run workflow
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential byacc

      - name: Build the project
        run: make all

      - name: Run ./mira -V and capture output
        id: version
        run: |
          if [ -f mira ]; then
            ./mira -V | tee mira-version.txt
          else
            echo "mira binary not found after build"
            exit 1
          fi

      - name: Add version output to GitHub Actions summary
        run: |
          echo '### `mira -V` Output' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat mira-version.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mira-binary
          path: |
            miralib/
            mira
            mira.1

  docker:
    name: Docker
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download miranda artifacts
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: mira-binary
          path: ./artifacts

      - name: Create slim Docker image
        run: |
          # Create Dockerfile
          cat <<'EOF' > artifacts/Dockerfile
          FROM debian:bookworm-slim

          # Copy all necessary files
          COPY miralib/ /usr/local/lib/miralib/
          COPY mira.1 /usr/share/man/man1/mira.1
          COPY mira /usr/local/bin/mira

          # Optional: make man page available (only if man is installed in container)
          RUN chmod +x /usr/local/bin/mira && \
              mkdir -p /usr/share/man/man1 && \
              gzip -f /usr/share/man/man1/mira.1 || true

          ENV MIRALIB=/usr/local/lib/miralib
          ENTRYPOINT ["/usr/local/bin/mira"]
          EOF

          docker build -t mira:${{ github.sha }} artifacts

      - name: Login and push to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          if [ -n "$DOCKERHUB_USERNAME" ]; then
            echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag mira:${{ github.sha }} ${DOCKERHUB_USERNAME}/mira:${{ github.sha }}
            docker tag ${DOCKERHUB_USERNAME}/mira:${{ github.sha }} ${DOCKERHUB_USERNAME}/mira:latest
            docker push ${DOCKERHUB_USERNAME}/mira:${{ github.sha }}
            docker push ${DOCKERHUB_USERNAME}/mira:latest
          else
            echo "Skipping Docker push: DOCKERHUB_USERNAME not set"
          fi
