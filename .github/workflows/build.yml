name: Build Miranda

on:
  # Run on pull request events that target the main branch
  pull_request:
    branches:
    - main

  # Run on push events to the main and feature branches
  push:
    branches:
    - feature/*

  # Enables a manual run workflow
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build multi-stage Docker image
        run: |
          # Create Dockerfile
          cat <<'EOF' > Dockerfile
          # ---- Stage 1: Build inside container ----
          FROM debian:bookworm AS builder

          RUN apt-get update && \
              apt-get install -y build-essential byacc

          WORKDIR /src
          COPY . .

          RUN make all

          # ---- Stage 2: Minimal runtime ----
          FROM debian:bookworm-slim

          # Install useful CLI tools (vi, less, man, bash)
          RUN apt-get update && \
              apt-get install -y \
                vim-tiny \
                less \
                man \
                manpages \
                bash \
                gzip && \
              rm -rf /var/lib/apt/lists/*
    
          COPY --from=builder /src/miralib/ /usr/local/lib/miralib/
          COPY --from=builder /src/mira.1 /usr/share/man/man1/mira.1
          COPY --from=builder /src/mira /usr/local/bin/mira

          RUN mkdir -p /usr/share/man/man1 && \
              chmod +x /usr/local/bin/mira && \
              gzip -f /usr/share/man/man1/mira.1 || true

          # Create a non-root user and group
          RUN groupadd --system mira && useradd --system --create-home --shell /bin/bash --gid mira mira
          
          # Make miralib user-owned
          RUN chown -R mira:mira /usr/local/lib/miralib
          
          # Switch to non-root user
          USER mira
          
          # Default working directory
          WORKDIR /home/mira

          ENV MIRALIB=/usr/local/lib/miralib \
              MIRAPROMPT='Miranda> '

          ENTRYPOINT ["/usr/local/bin/mira"]
          EOF

          docker build -t mira:${{ github.sha }} .

      - name: Test image output
        run: |
          docker run --rm mira:${{ github.sha }} -V | tee mira-version.txt
          echo '### `mira -V` Output' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat mira-version.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Login and push to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          if [ -n "$DOCKERHUB_USERNAME" ]; then
            echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag mira:${{ github.sha }} ${DOCKERHUB_USERNAME}/mira:${{ github.sha }}
            docker tag ${DOCKERHUB_USERNAME}/mira:${{ github.sha }} ${DOCKERHUB_USERNAME}/mira:latest
            docker push ${DOCKERHUB_USERNAME}/mira:${{ github.sha }}
            docker push ${DOCKERHUB_USERNAME}/mira:latest
          else
            echo "Skipping Docker push: DOCKERHUB_USERNAME not set"
          fi
